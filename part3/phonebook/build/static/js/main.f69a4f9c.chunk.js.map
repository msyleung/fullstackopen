{"version":3,"sources":["display.js","new.js","notification.js","search.js","services/api.js","app.js","index.js"],"names":["Display","persons","handleDelete","map","person","key","id","className","name","number","onClick","NewEntry","newName","newNumber","handleChange","handleSubmit","onSubmit","value","onChange","type","Notification","message","setMessage","setTimeout","styles","includes","Search","search","baseUrl","axios","get","then","response","data","newPerson","post","newInfo","put","delete","App","useState","setPersons","personsToDisplay","setPersonsToDisplay","setSearch","setNewNumber","setNewName","setDatabase","Api","newPeople","useEffect","newSearch","filter","toLowerCase","event","target","console","log","preventDefault","length","currentPerson","find","window","alert","confirm","handleExistingUser","savedPerson","concat","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f69a4f9c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Display = ({ persons, handleDelete }) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            <h2>Numbers</h2>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {persons.map((person) => (\n          <tr key={person.id} className=\"row\">\n            <td>{person.name}</td>\n            <td>{person.number}</td>\n            <td>\n              <button onClick={handleDelete} id={person.id} name={person.name}>\n                delete\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Display;\n","import React from \"react\";\n\nconst NewEntry = ({ newName, newNumber, handleChange, handleSubmit }) => {\n  return (\n    <div className=\"newEntry\">\n      <h2>Add a new entry:</h2>\n      <form onSubmit={handleSubmit} className=\"entryForm\">\n        <div>\n          name: <input value={newName} onChange={handleChange} id=\"name\" />\n        </div>\n        <div>\n          number:{\" \"}\n          <input value={newNumber} onChange={handleChange} id=\"number\" />\n        </div>\n        <div>\n          <button type=\"submit\">save</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default NewEntry;\n","import React from \"react\";\n\nconst Notification = ({ message, setMessage }) => {\n  setTimeout(() => {\n    setMessage(null);\n  }, 3000);\n  let styles = message.includes(\"Error\")\n    ? \"notification error\"\n    : \"notification\";\n  return <div className={styles}>{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\nimport \"./index.css\";\n\nconst Search = ({ search, handleChange }) => {\n  return (\n    <div className=\"search\">\n      Search: <input value={search} onChange={handleChange} id=\"search\" />\n    </div>\n  );\n};\n\nexport default Search;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst create = (newPerson) => {\n  return axios.post(baseUrl, newPerson).then((response) => response.data);\n};\n\nconst update = (id, newInfo) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newInfo)\n    .then((response) => response.data);\n};\n\nconst destroy = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\n};\n\nexport default { getAll, create, update, destroy };\n","import React, { useState, useEffect } from \"react\";\nimport Display from \"./display\";\nimport NewEntry from \"./new\";\nimport Notification from \"./notification\";\nimport Search from \"./search\";\nimport Api from \"./services/api\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [personsToDisplay, setPersonsToDisplay] = useState(persons);\n  const [search, setSearch] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const setDatabase = () => {\n    Api.getAll().then((newPeople) => setPersons(newPeople));\n  };\n\n  useEffect(() => {\n    setDatabase();\n  }, []);\n\n  useEffect(() => {\n    setPersonsToDisplay(persons);\n  }, [persons]);\n\n  useEffect(() => {\n    if (!search) {\n      return setPersonsToDisplay(persons);\n    }\n    let newSearch = persons.filter((person) =>\n      person.name.toLowerCase().includes(search.toLowerCase())\n    );\n    setPersonsToDisplay(newSearch);\n  }, [search, persons]);\n\n  const handleExistingUser = (currentPerson, newInfo) => {\n    let { number, name, id } = currentPerson;\n    if (number === newInfo.number) {\n      window.alert(`${name} is already added to the phonebook!`);\n    } else {\n      let replace = window.confirm(\n        `${name} is already added to the phonebook, replace the old number with the new one?`\n      );\n      if (replace) {\n        Api.update(id, newInfo).then(() => setDatabase());\n        setMessage(`${name} has been updated!`);\n      }\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let newInfo = {\n      id: persons.length + 1,\n      name: newName,\n      number: newNumber,\n    };\n    let currentPerson = persons.find((person) => person.name === newInfo.name);\n    currentPerson\n      ? handleExistingUser(currentPerson, newInfo)\n      : Api.create(newInfo).then((savedPerson) => {\n          setPersons(persons.concat(savedPerson));\n          setMessage(`${savedPerson.name} has been added to the phonebook!`);\n        });\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleChange = (event) => {\n    const { id, value } = event.target;\n    switch (id) {\n      case \"name\":\n        setNewName(value);\n        break;\n      case \"number\":\n        setNewNumber(value);\n        break;\n      case \"search\":\n        setSearch(value);\n        break;\n      default:\n        console.log(\"???\");\n    }\n  };\n\n  const handleDelete = (event) => {\n    let { id, name } = event.target;\n    if (window.confirm(`Delete ${name}?`)) {\n      Api.destroy(id)\n        .then(() => {\n          setDatabase();\n        })\n        .catch(() => {\n          setMessage(`Error: ${name} has already been deleted`);\n        });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"navbar\">\n        <h1>Phonebook</h1>\n        <Search search={search} handleChange={handleChange} />\n      </div>\n      {message && <Notification message={message} setMessage={setMessage} />}\n      <NewEntry\n        newName={newName}\n        newNumber={newNumber}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n      <Display persons={personsToDisplay} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}